version: '3'

tasks:

  default:
    desc: List all tasks
    cmds:
      - task --list

  install:
    desc: Install dependencies from requirements.lock using uv
    cmd: uv pip install -r requirements.lock

  lint:
    desc: Lint the codebase using ruff
    cmd: uv run ruff check .

  format:
    desc: Format code using ruff
    cmd: uv run ruff format .

  test:
    desc: Run tests with pytest
    cmd: uv run pytest tests

  test-coverage:
    desc: Run tests with pytest and coverage
    cmd: uv run pytest --cov=src tests --verbose

  test-unit:
    desc: Run unit tests with pytest
    cmd: uv run pytest tests -m "not integration"

  test-integration:
    desc: Run integration tests with pytest
    cmd: uv run pytest tests -m "integration"

  run-dev:
    desc: Run main FastAPI app in dev mode
    cmd: uv run uvicorn src.main:app --reload --port 8080

  run:
    desc: Run main FastAPI app
    cmd: uv run uvicorn src.main:app --port 8080

  ## tasknote service

  run-dev:tasknote:
    desc: Run tasknote service app in dev mode
    cmd: uv run uvicorn src.tasknote.main:app --reload --port 8081

  run:tasknote:
    desc: Run tasknote service app
    cmd: uv run uvicorn src.tasknote.main:app --port 8081


  migrate:tasknote:
    desc: Up-Migrate tasknote service
    cmds:
      - alembic -c src/tasknote/alembic.ini upgrade head

  down-migrate:tasknote:
    desc: Down-Migrate tasknote service
    cmds:
      - alembic -c src/tasknote/alembic.ini downgrade -1


  revision:tasknote:
    desc: Create a new Alembic revision for tasknote service
    cmds:
      - alembic -c src/tasknote/alembic.ini revision --autogenerate -m "{{.MSG}}"
    requires:
      vars: [ "MSG" ]

  test-unit:tasknote:
    desc: Run unit tests with pytest
    cmd: uv run pytest tests/tasknote -m "not integration"

  test-integration:tasknote:
    desc: Run integration tests with pytest
    cmd: uv run pytest tests/tasknote -m "integration"

    ## tasknote service end