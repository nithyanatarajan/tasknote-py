version: '3'

tasks:
  install:
    desc: Install dependencies from requirements.lock using uv
    cmd: uv pip install -r requirements.lock

  lint:
    desc: Lint the codebase using ruff
    cmd: uv run ruff check .

  format:
    desc: Format code using ruff
    cmd: uv run ruff format .

  test:
    desc: Run tests with pytest and coverage
    cmd: uv run pytest tests

  test-coverage:
    desc: Run tests with pytest and coverage
    cmd: uv run pytest --cov=src tests --verbose


  run-dev:
    desc: Run main FastAPI app in dev mode
    cmd: uv run uvicorn src.main:app --reload --port 8080

  run:
    desc: Run main FastAPI app
    cmd: uv run uvicorn src.main:app --port 8080

  run-notes-dev:
    desc: Run notes FastAPI app in dev mode
    cmd: uv run uvicorn src.notes.main:app --reload --port 8081

  run-notes:
    desc: Run notes FastAPI app
    cmd: uv run uvicorn src.notes.main:app --port 8081

  run-all:
    desc: Run both main and notes apps concurrently
    deps: [ run, run-notes ]

  migrate-notes:
    desc: "Up-Migrate Notes service"
    cmds:
      - alembic -c src/notes/alembic.ini upgrade head

  down-migrate-notes:
    desc: "Down-Migrate Notes service"
    cmds:
      - alembic -c src/notes/alembic.ini downgrade -1


  revision-notes:
    desc: "Create a new Alembic revision for Notes"
    cmds:
      - alembic -c src/notes/alembic.ini revision --autogenerate -m "{{.MSG}}"
    requires:
      vars: [ "MSG" ]
